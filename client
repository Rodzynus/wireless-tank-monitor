local tArgs = { ... }

local readDelay = 5
local assertMsg = "Wrong argument, type name of the program without any arguments to see usage."

local function comma_value(amount)
  local formatted = amount
  while true do  
    formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1.%2')
    if (k==0) then
      break
    end
  end
  return formatted
end

local function main()
	local receiverID = assert(tonumber(tArgs[1]), assertMsg)
	local modemSide = assert(tArgs[2], assertMsg)
	local tankSide = assert(tArgs[3], assertMsg)
	local id = os.getComputerID()
	local tankName = os.getComputerLabel()
	
	rednet.open(modemSide)
	local tank = peripheral.wrap(tankSide)
	local tankTable = tank.getTanks(tankSide)
	local liquidStored = tankTable[1]["amount"] or 0
	
	timer1 = os.startTimer(readDelay)
	while true do
		os.pullEvent("timer")
		
		local tankTableFin = {}
		local lastLiquidStatus = liquidStored
		tankTable = tank.getTanks(tankSide)
		liquidStored = tankTable[1]["amount"] or 0
		
		local maxLiquidStored = tankTable[1]["capacity"]
		local liquidInPercent = (liquidStored/maxLiquidStored)*100
		local liquidDifference = liquidStored - lastLiquidStatus
		lastLiquidStatus = liquidStored
		
		tankTableFin[1] = tankName
		if tankTable[1]["name"] == nil then tankTableFin[2] = "Zbiornik pusty"
		elseif tankTable[1]["name"] == "tile.oilStill" then tankTableFin[2] = "Oil"
		elseif tankTable[1]["name"] == "item.fuel" then tankTableFin[2] = "Fuel"
		else tankTableFin[2] = tankTable[1]["name"]
		end
		
		tankTableFin[3] = tostring(comma_value(math.floor(liquidStored/1000))) .. " B"
		tankTableFin[4] = tostring(comma_value(math.floor(maxLiquidStored/1000))) .. " B"
		tankTableFin[5] = tostring(math.floor(liquidInPercent)) .. "%"
		if liquidDifference >= 0 then
			tankTableFin[6] = tostring(math.abs(math.floor(liquidDifference/100))) .. " mB/t zysku"
		else
			tankTableFin[6] = tostring(math.abs(math.floor(liquidDifference/100))) .. " MB/t straty"
		end
		
		tankTableFin["id"] = tostring(id)
		
		rednet.send(receiverID, textutils.serialize(tankTableFin))
		timer1 = os.startTimer(readDelay)
	end
end

local function printUsage()
	print("Usage: client <receiver ID> <modem side> <battery side>")
end

if tArgs[1] == nil then
	printUsage()
else
	main()
end
